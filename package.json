{
  "name": "marinaobuv",
  "version": "1.0.0",
  "description": "MarinaObuv - Modern Next.js Application",
  "main": "ecosystem.config.js",
  "scripts": {
    "dev": "cd web && npm run dev",
    "build": "cd web && npm run build",
    "start": "pm2 start ecosystem.config.js",
    "start:prod": "pm2 start ecosystem.config.js --env production",
    "stop": "pm2 stop marinaobuv",
    "restart": "pm2 restart marinaobuv-local",
    "reload": "pm2 reload marinaobuv-local",
    "delete": "pm2 delete marinaobuv-local",
    "logs": "pm2 logs marinaobuv-local",
    "status": "pm2 status",
    "monitor": "pm2 monit",
    "setup": "npm install && cd web && npm install",
    "deploy": "./deploy-pm2.sh",
    "deploy:blue-green": "./scripts/blue-green-deploy.sh",
    "deploy:full": "./deploy-pm2.sh",
    "deploy:local": "./scripts/local-deploy.sh",
    "setup:local": "./scripts/setup-local-env.sh",
    "parse:groq": "cd web && tsx src/scripts/groq-sequential-cron.ts",
    "test:color-fix": "cd web && tsx src/scripts/test-color-fix.ts",
    "health": "curl -s http://localhost:3000/api/health || echo 'Application not responding'",
    "prisma": "cd web && ./load-env.sh npx prisma studio",
    "prisma:generate": "cd web && npx prisma generate",
    "prisma:migrate": "cd web && npx prisma migrate dev",
    "prisma:reset": "cd web && npx prisma migrate reset",
    "prisma:seed": "cd web && npx prisma db seed",
    "parse": "cd web && npx tsx src/scripts/hourly-cron.ts",
    "parse:fetch": "cd web && npm run fetch:recent",
    "parse:test": "cd web && npx tsx src/scripts/test-parsing-monitoring.ts",
    "parse:cleanup": "cd web && npx tsx src/scripts/cleanup-stuck-parsing.ts",
    "server:parse": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv/web && NODE_ENV=production npx tsx src/scripts/hourly-cron.ts'",
    "env:deploy": "scp web/.env ubuntu@130.193.56.134:/var/www/marinaobuv/web/.env",
    "logs:parse": "cd web && tail -f logs/parsing-cron.log",
    "server:parser-logs-recent": "ssh -l ubuntu 130.193.56.134 'tail -n 20 /var/www/marinaobuv/web/logs/parsing-cron.log | grep -E \"(Starting|Completed|Error|‚úÖ|‚ùå|üìä)\" | tail -10'",
    "migrate:validate": "cd web && npm run migrate:validate",
    "migrate:robust": "cd web && npm run migrate:robust",
    "migrate:check": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv && ./scripts/validate-migrations.sh'",
    "server:logs": "ssh -l ubuntu 130.193.56.134 'pm2 logs marinaobuv-blue'",
    "db:setup": "chmod +x scripts/setup-database.sh && ./scripts/setup-database.sh",
    "db:fix-auth": "chmod +x scripts/fix-database-auth.sh && ./scripts/fix-database-auth.sh",
    "server:cron-status": "ssh -l ubuntu 130.193.56.134 'systemctl status cron --no-pager || systemctl status crond --no-pager; echo \"--- enabled ---\"; systemctl is-enabled cron || systemctl is-enabled crond; echo \"--- recent logs (last hour) ---\"; journalctl -u cron --since \"1 hour ago\" --no-pager -n 200 || journalctl -u crond --since \"1 hour ago\" --no-pager -n 200'",
    "server:check-parsers": "ssh -l ubuntu 130.193.56.134 'ps aux | grep -E \"(hourly-cron|parsing|tsx.*scripts)\" | grep -v grep && echo \"--- PM2 Processes ---\" && pm2 list | grep -E \"(parsing|cron|tsx)\" || echo \"No parser processes found\"'",
    "server:prisma": "./scripts/start-prisma-studio.sh",
    "server:env": "ssh -l ubuntu 130.193.56.134 'echo \"--- /var/www/marinaobuv/web/.env ---\"; sed -n \"1,240p\" /var/www/marinaobuv/web/.env'",
    "server:restart": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv && pm2 reload marinaobuv --update-env'",
    "server:deploy:fast": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv && ./scripts/server-fast-deploy.sh'",
    "server:db:fix": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv && export DATABASE_URL=\"$(grep DATABASE_URL web/.env | cut -d= -f2-)\" && ./scripts/fix-database-auth.sh'",
    "server:reload:all": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv && pm2 startOrReload ecosystem.config.js --env production --update-env && pm2 save'",
    "server:crons:install": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv && bash -s' < scripts/install-crons.sh",
    "server:backup:run-now": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv/web && export $(grep -v '^#' ./.env | xargs) && npx tsx scripts/backup-database.ts'",
    "server:backup:logs": "ssh -l ubuntu 130.193.56.134 'tail -n 200 -f /var/www/marinaobuv/web/logs/backup.log'",
    "server:cron:list": "ssh -l ubuntu 130.193.56.134 'crontab -l'",
    "server:cron:stop": "ssh -l ubuntu 130.193.56.134 'crontab -r && echo \"Cron jobs removed\"'",
    "server:cron:start": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv && bash -s' < scripts/install-crons.sh && echo \"Cron jobs reinstalled\"",
    "server:cron:disable": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv/web && grep -q \"DISABLE_CRON_PARSING\" .env || echo \"DISABLE_CRON_PARSING=true\" >> .env && grep -q \"DISABLE_CRON_QUEUE\" .env || echo \"DISABLE_CRON_QUEUE=true\" >> .env && grep -q \"DISABLE_CRON_BATCH_POLL\" .env || echo \"DISABLE_CRON_BATCH_POLL=true\" >> .env && echo \"All cron jobs disabled via environment variables\"'",
    "server:cron:enable": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv/web && echo \"Removing all DISABLE_CRON_ variables...\" && sed -i \"/^DISABLE_CRON_/d\" .env && echo \"All cron jobs enabled\"'",
    "server:disk": "ssh -l ubuntu 130.193.56.134 'df -h'",
    "server:memory": "ssh -l ubuntu 130.193.56.134 'free -h'",
    "server:space": "ssh -l ubuntu 130.193.56.134 'echo \"=== Disk Usage ===\" && df -h && echo \"=== Memory Usage ===\" && free -h && echo \"=== Project Size ===\" && du -sh /var/www/marinaobuv && echo \"=== Node Modules Size ===\" && du -sh /var/www/marinaobuv/web/node_modules && echo \"=== Backups Size ===\" && du -sh /var/www/marinaobuv/web/backups'",
    "parser:run": "cd web && npx tsx src/scripts/groq-sequential-cron.ts",
    "parser:logs": "cd web && tail -f logs/groq-sequential.log",
    "parser:logs:history": "cd web && tail -n 100 logs/groq-sequential.log",
    "webhook:configure": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv/web && npx tsx src/scripts/configure-webhook.ts'",
    "webhook:test": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv/web && npx tsx src/scripts/test-webhook.ts'",
    "webhook:check": "curl -f https://marina-obuv.ru/api/webhooks/green-api || echo 'Webhook endpoint not responding'",
    "webhook:logs": "ssh -l ubuntu 130.193.56.134 'echo \"=== Recent Webhook Activity (last 50 lines) ===\" && tail -n 50 /var/www/marinaobuv/web/logs/marinaobuv-green-out.log | grep -E \"(webhook|Green API|‚úÖ|‚ùå|üîî|üì∑|üéØ)\" && echo \"=== Live Webhook Logs ===\" && tail -f /var/www/marinaobuv/web/logs/marinaobuv-green-out.log | grep -E \"(webhook|Green API|‚úÖ|‚ùå|üîî|üì∑|üéØ)\"'",
    "webhook:logs:history": "ssh -l ubuntu 130.193.56.134 'echo \"=== Webhook History (last 100 lines) ===\" && tail -n 100 /var/www/marinaobuv/web/logs/marinaobuv-green-out.log | grep -E \"(webhook|Green API|‚úÖ|‚ùå|üîî|üì∑|üéØ)\"'",
    "webhook:verify:server": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv && ./scripts/verify-webhook-deployment.sh'",
    "webhook:ensure": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv && ./scripts/ensure-webhook-config.sh'",
    "proxy:check": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv && ./scripts/check-proxy-health.sh'",
    "proxy:restart": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv && pm2 restart groq-proxy'",
    "proxy:logs": "ssh -l ubuntu 130.193.56.134 'pm2 logs groq-proxy --lines 50'",
    "deploy:verify": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv && ./scripts/verify-deployment.sh'",
    "proxy:deploy": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv && ./scripts/deploy-proxy-fix.sh'",
    "server:parser:run": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv && pm2 start ecosystem-parser.config.js --env production'",
    "server:parser:logs": "ssh -l ubuntu 130.193.56.134 'pm2 logs groq-sequential --lines 50'",
    "server:parser:logs:history": "ssh -l ubuntu 130.193.56.134 'pm2 logs groq-sequential --lines 100'",
    "server:system:status": "ssh -l ubuntu 130.193.56.134 'echo \"=== System Status ===\" && echo \"CPU: $(top -bn1 | grep \"Cpu(s)\" | awk \"{print $2}\" | awk -F\"%\" \"{print $1}\")\" && echo \"Memory: $(free -h | awk \"/^Mem:/ {print $3 \"/\" $2}\")\" && echo \"Disk: $(df -h / | awk \"NR==2 {print $3 \"/\" $2 \\\" (\\\" $5 \\\")\\\"}\")\"'",
    "messages:reset": "cd web && npx tsx src/scripts/mark-messages-unprocessed.ts",
    "server:cron-parser:kill": "ssh -l ubuntu 130.193.56.134 'cd /var/www/marinaobuv && pm2 stop groq-sequential && pm2 delete groq-sequential && cd web && export $(grep -v \"^#\" .env | xargs) && npx tsx src/scripts/kill-parser-and-update-status.ts'",
    "server:cron-parser-logs": "ssh -l ubuntu 130.193.56.134 'tail -n 200 -f /var/www/marinaobuv/web/logs/parsing-cron.log'",
    "webhook:monitor:logs": "ssh -l ubuntu 130.193.56.134 'echo \"=== Webhook Monitor Logs (last 50 lines) ===\" && tail -n 50 /var/www/marinaobuv/web/logs/webhook-monitor.log'",
    "webhook:monitor:logs:live": "ssh -l ubuntu 130.193.56.134 'echo \"=== Live Webhook Monitor Logs ===\" && tail -f /var/www/marinaobuv/web/logs/webhook-monitor.log'",
    "webhook:monitor:logs:history": "ssh -l ubuntu 130.193.56.134 'echo \"=== Webhook Monitor History (last 100 lines) ===\" && tail -n 100 /var/www/marinaobuv/web/logs/webhook-monitor.log'"
  },
  "keywords": [
    "nextjs",
    "react",
    "typescript",
    "marinaobuv"
  ],
  "author": "MarinaObuv Team",
  "license": "Private",
  "devDependencies": {
    "pm2": "^6.0.13"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=8.0.0"
  }
}
